--- a/linux-tkg-config/prepare	2023-01-12 09:17:53.737658124 -0700
+++ b/linux-tkg-config/prepare	2023-01-12 09:21:36.476375977 -0700
@@ -405,45 +405,6 @@
   fi
 
   cd "$_where"
-
-  if ! [ -d "$_kernel_source_folder_abs" ]; then
-    msg2 "First initialization of the linux source code git folder"
-    mkdir -p "$_kernel_source_folder_abs"
-    cd "$_kernel_source_folder_abs"
-    git init --bare
-  fi
-
-  cd "$_kernel_source_folder_abs"
-
-  # Add remotes if needed
-  for remote in "${!_kernel_git_remotes[@]}"; do
-    if ! git remote -v | grep -w "$remote" ; then
-      git remote add "$remote" "${_kernel_git_remotes[$remote]}"
-    fi
-  done
-
-  msg2 "Fetching tag: $_kernel_git_tag from mirror $_git_mirror"
-  git fetch --depth 1 $_git_mirror tag "$_kernel_git_tag"
-
-  msg2 "Checking out tag: $_kernel_git_tag"
-  msg2 "   in the work folder: $_kernel_work_folder_abs"
-
-  # The space ' ' in grep -w "$_kernel_work_folder_abs " is important
-  # to not match an existing folder with a longer name with the same prefix name
-  if [ -d "$_kernel_work_folder_abs" ] && \
-     ( git worktree list | grep -w "$_kernel_work_folder_abs " ) && \
-     ( cd "$_kernel_work_folder_abs" && git status > /dev/null 2>&1 ); then
-    # Worktree folder exists and is a valid worktree
-    cd "$_kernel_work_folder_abs"
-    git reset --hard
-    git clean -ffdx
-    git checkout "$_kernel_git_tag"
-  else
-    # In all other cases, just force create the work tree
-    rm -rf "$_kernel_work_folder_abs"
-    git worktree add -f "$_kernel_work_folder_abs" "$_kernel_git_tag"
-  fi
-
 }
 
 
